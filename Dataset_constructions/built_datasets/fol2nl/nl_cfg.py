from nltk import CFG

NL_type1 = CFG.fromstring("""
          E -> Uni | Exi | "("E LO E")"
          Uni -> "∀_(#(_)→*(_))"
          Exi -> "∃_(#(_)∧*(_))"
          LO -> "∧" | "∨" | "→"
          """)

NL_type2 = CFG.fromstring("""
          Formula -> OptA | OptB | OptC | OptD | "("Formula LO Formula")"
          OptA -> Part1 "∀@" Sub_Part1
          OptB -> Part1 "∃@" Sub_Part2
          OptC -> Part2 "∀@" Sub_Part1
          OptD -> Part2 "∃@" Sub_Part2
          Part1 -> "∀_" "(" "#(_)" "→"
          Part2 -> "∃_" "(" "#(_)" "∧"
          Sub_Part1 -> "(" "#(@)" "→" "*(_,@)" "))"
          Sub_Part2 -> "(" "#(@)" "∧" "*(_,@)" "))"
          LO -> "∧" | "∨" | "→"
          """)

NL_type3 = CFG.fromstring("""
          Formula -> A | B | C | D | E | F | G | H | "("Formula LO Formula")"
          A -> "∀_(#(_)→∀_(#(_)→∀_(@(_)→*(_,_,_))))"
          B -> "∀_(#(_)→∃_(#(_)∧∀_(@(_)→*(_,_,_))))"
          C -> "∀_(#(_)→∀_(#(_)→∃_(@(_)∧*(_,_,_))))"
          D -> "∀_(#(_)→∃_(#(_)∧∃_(@(_)∧*(_,_,_))))"
          E -> "∃_(#(_)∧∃_(#(_)∧∃_(@(_)∧*(_,_,_))))"
          F -> "∃_(#(_)∧∀_(#(_)→∃_(@(_)∧*(_,_,_))))"
          G -> "∃_(#(_)∧∃_(#(_)∧∀_(@(_)→*(_,_,_))))"
          H -> "∃_(#(_)∧∀_(#(_)→∀_(@(_)→*(_,_,_))))"
          LO -> "∧" | "∨" | "→"
          """)

NL_type3_2 = CFG.fromstring("""
          Formula -> E | F | G | H | A | B | C | D | "("Formula LO Formula")"
          A -> "∀_(#(_)→∀_(#(_)→∀_(@(_)→*(_,_,_))))"
          B -> "∀_(#(_)→∃_(#(_)∧∀_(@(_)→*(_,_,_))))"
          C -> "∀_(#(_)→∀_(#(_)→∃_(@(_)∧*(_,_,_))))"
          D -> "∀_(#(_)→∃_(#(_)∧∃_(@(_)∧*(_,_,_))))"
          E -> "∃_(#(_)∧∃_(#(_)∧∃_(@(_)∧*(_,_,_))))"
          F -> "∃_(#(_)∧∀_(#(_)→∃_(@(_)∧*(_,_,_))))"
          G -> "∃_(#(_)∧∃_(#(_)∧∀_(@(_)→*(_,_,_))))"
          H -> "∃_(#(_)∧∀_(#(_)→∀_(@(_)→*(_,_,_))))"
          LO -> "∧" | "∨" | "→"
          """)




